# Generated by Django 2.2.2 on 2019-06-23 16:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmmoType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Тип патронов')),
            ],
        ),
        migrations.CreateModel(
            name='Fractions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Наименование Фракции')),
                ('count', models.IntegerField(default=0, help_text='Количество персонажей во фракции')),
            ],
        ),
        migrations.CreateModel(
            name='GameObjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Наименование объекта')),
                ('lvl', models.PositiveIntegerField(default=1, help_text='Уровень предмета')),
                ('weight', models.FloatField(default=0.0, help_text='Вес предмет, кг')),
                ('description', models.TextField(blank=True, help_text='Описание предмета')),
                ('load_capacity', models.FloatField(blank=True, default=0, help_text='Грузоподъемность, кг')),
                ('grouping', models.FloatField(blank=True, default=None, help_text='Кучность', null=True)),
                ('fire_tempo', models.PositiveIntegerField(blank=True, default=None, help_text='Темп огня', null=True)),
                ('ammo_type', models.OneToOneField(blank=True, help_text='Тип патронов', null=True, on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.AmmoType')),
            ],
        ),
        migrations.CreateModel(
            name='LocationGObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Место расположение объекта')),
            ],
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Наименование локации')),
                ('description', models.TextField(default=None, help_text='Описание локации')),
            ],
        ),
        migrations.CreateModel(
            name='Personage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(help_text='Имя персонажа', max_length=20, unique=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, help_text='Дата создание персонажа')),
                ('date_last_input', models.DateTimeField(auto_now=True, help_text='Дата последнего входа')),
                ('kill_count', models.PositiveIntegerField(default=0, help_text='Счетсчик убийств')),
                ('fraction', models.ForeignKey(default=None, help_text='Индетефикатор фракции', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.Fractions')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(help_text='Логин пользователя', max_length=20)),
                ('passwd', models.CharField(help_text='Пароль пользователя', max_length=20, null=True)),
                ('date_to_block', models.DateField(default=None, help_text='Дата окончания блокировки', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonageTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_last_visit', models.DateTimeField(auto_now=True, help_text='Последняя дата визита локации')),
                ('locations', models.OneToOneField(help_text='ИД локации', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.Locations')),
                ('personage', models.ForeignKey(help_text='ИД персонажа', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.Personage')),
            ],
        ),
        migrations.AddField(
            model_name='personage',
            name='user',
            field=models.ForeignKey(help_text='Индетефикатор пользователя', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.Profile'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_count', models.PositiveIntegerField(default=0, help_text='Кол-во использований')),
                ('gObject', models.ForeignKey(default=0, help_text='ИД предмета', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.GameObjects')),
                ('location_gObject', models.ForeignKey(help_text='Расположение объекта в инвенторе', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.LocationGObject')),
                ('personage', models.ForeignKey(default=0, help_text='ИД персонажа', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.Personage')),
            ],
        ),
        migrations.CreateModel(
            name='GroupGObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Тип предмета')),
                ('location_gObject', models.ForeignKey(help_text='Расположение объекта в инвенторе', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.LocationGObject')),
            ],
        ),
        migrations.AddField(
            model_name='gameobjects',
            name='group_game_object',
            field=models.ForeignKey(help_text='К какой группе принадлежат', on_delete=django.db.models.deletion.CASCADE, to='PanelsForGame.GroupGObject'),
        ),
    ]
